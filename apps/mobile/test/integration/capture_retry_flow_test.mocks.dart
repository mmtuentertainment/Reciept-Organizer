// Mocks generated by Mockito 5.4.4 from annotations
// in receipt_organizer/test/integration/capture_retry_flow_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:camera/camera.dart' as _i10;
import 'package:google_mlkit_commons/google_mlkit_commons.dart' as _i7;
import 'package:google_mlkit_text_recognition/src/text_recognizer.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:receipt_organizer/data/models/camera_frame.dart' as _i9;
import 'package:receipt_organizer/data/models/capture_result.dart' as _i3;
import 'package:receipt_organizer/data/models/edge_detection_result.dart'
    as _i4;
import 'package:receipt_organizer/domain/services/camera_service.dart' as _i8;
import 'package:receipt_organizer/features/capture/services/retry_session_manager.dart'
    as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRecognizedText_0 extends _i1.SmartFake
    implements _i2.RecognizedText {
  _FakeRecognizedText_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCaptureResult_1 extends _i1.SmartFake implements _i3.CaptureResult {
  _FakeCaptureResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEdgeDetectionResult_2 extends _i1.SmartFake
    implements _i4.EdgeDetectionResult {
  _FakeEdgeDetectionResult_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TextRecognizer].
///
/// See the documentation for Mockito's code generation for more information.
class MockTextRecognizer extends _i1.Mock implements _i2.TextRecognizer {
  MockTextRecognizer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TextRecognitionScript get script => (super.noSuchMethod(
        Invocation.getter(#script),
        returnValue: _i2.TextRecognitionScript.latin,
      ) as _i2.TextRecognitionScript);

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  _i6.Future<_i2.RecognizedText> processImage(_i7.InputImage? inputImage) =>
      (super.noSuchMethod(
        Invocation.method(
          #processImage,
          [inputImage],
        ),
        returnValue: _i6.Future<_i2.RecognizedText>.value(_FakeRecognizedText_0(
          this,
          Invocation.method(
            #processImage,
            [inputImage],
          ),
        )),
      ) as _i6.Future<_i2.RecognizedText>);

  @override
  _i6.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [ICameraService].
///
/// See the documentation for Mockito's code generation for more information.
class MockICameraService extends _i1.Mock implements _i8.ICameraService {
  MockICameraService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.CaptureResult> captureReceipt({bool? batchMode = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #captureReceipt,
          [],
          {#batchMode: batchMode},
        ),
        returnValue: _i6.Future<_i3.CaptureResult>.value(_FakeCaptureResult_1(
          this,
          Invocation.method(
            #captureReceipt,
            [],
            {#batchMode: batchMode},
          ),
        )),
      ) as _i6.Future<_i3.CaptureResult>);

  @override
  _i6.Stream<_i9.CameraFrame> getPreviewStream() => (super.noSuchMethod(
        Invocation.method(
          #getPreviewStream,
          [],
        ),
        returnValue: _i6.Stream<_i9.CameraFrame>.empty(),
      ) as _i6.Stream<_i9.CameraFrame>);

  @override
  _i6.Future<_i4.EdgeDetectionResult> detectEdges(_i9.CameraFrame? frame) =>
      (super.noSuchMethod(
        Invocation.method(
          #detectEdges,
          [frame],
        ),
        returnValue: _i6.Future<_i4.EdgeDetectionResult>.value(
            _FakeEdgeDetectionResult_2(
          this,
          Invocation.method(
            #detectEdges,
            [frame],
          ),
        )),
      ) as _i6.Future<_i4.EdgeDetectionResult>);

  @override
  _i6.Future<_i10.CameraController?> getCameraController() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCameraController,
          [],
        ),
        returnValue: _i6.Future<_i10.CameraController?>.value(),
      ) as _i6.Future<_i10.CameraController?>);

  @override
  _i6.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [RetrySessionManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockRetrySessionManager extends _i1.Mock
    implements _i11.RetrySessionManager {
  MockRetrySessionManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> saveSession(_i11.RetrySession? session) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSession,
          [session],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i11.RetrySession?> loadSession(String? sessionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadSession,
          [sessionId],
        ),
        returnValue: _i6.Future<_i11.RetrySession?>.value(),
      ) as _i6.Future<_i11.RetrySession?>);

  @override
  _i6.Future<bool> cleanupSession(String? sessionId) => (super.noSuchMethod(
        Invocation.method(
          #cleanupSession,
          [sessionId],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<int> cleanupExpiredSessions() => (super.noSuchMethod(
        Invocation.method(
          #cleanupExpiredSessions,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<List<String>> getActiveSessions() => (super.noSuchMethod(
        Invocation.method(
          #getActiveSessions,
          [],
        ),
        returnValue: _i6.Future<List<String>>.value(<String>[]),
      ) as _i6.Future<List<String>>);

  @override
  _i6.Future<int> getStorageUsage() => (super.noSuchMethod(
        Invocation.method(
          #getStorageUsage,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
}
