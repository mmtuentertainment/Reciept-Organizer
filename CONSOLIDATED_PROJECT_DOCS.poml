<poml>
  <role>Master Consolidation Document for Receipt Organizer Project</role>
  <task>Resolve all documentation confusion and provide single source of truth</task>

  <metadata>
    <version>1.0</version>
    <date>2025-01-16</date>
    <author>Claude (AI Assistant)</author>
    <purpose>Consolidate all project documentation with corrected story/epic numbering</purpose>
    <context>Created after discovering major story numbering confusion where authentication stories were mislabeled as receipt capture stories</context>
  </metadata>

  <!-- ============================================ -->
  <!--        CRITICAL NUMBERING CONFUSION         -->
  <!-- ============================================ -->

  <numbering-confusion-resolution>
    <discovery>
      During consolidation, discovered that story files 1.1-1.4 contain WRONG content:
      - Files named 1.1.story.md through 1.4.story.md contain receipt capture stories
      - But PROJECT_STATUS.md shows these numbers were for authentication stories
      - Actual authentication stories exist in files named story-1.1-web-authentication.md etc.
    </discovery>

    <story-mapping>
      <files-renamed status="FIXED">
        <old-name>1.1.story.md</old-name> → <new-name>epic-1-story-1-batch-receipt-capture.md</new-name>
        <old-name>1.2.story.md</old-name> → <new-name>epic-1-story-2-auto-edge-detection.md</new-name>
        <old-name>1.3.story.md</old-name> → <new-name>epic-1-story-3-ocr-confidence-scores.md</new-name>
        <old-name>1.4.story.md</old-name> → <new-name>epic-1-story-4-retry-failed-captures.md</new-name>
      </files-renamed>

      <correct-auth-stories>
        <story id="1.0" file="story-1.0-auth-testing-infrastructure.md" title="Auth Testing Infrastructure"/>
        <story id="1.1" file="story-1.1-web-authentication.md" title="Web Authentication Enhancement"/>
        <story id="1.2" file="story-1.2-database-rls.md" title="Database RLS Configuration"/>
        <story id="1.3" file="story-1.3-flutter-authentication.md" title="Flutter Authentication"/>
        <story id="1.4" file="story-1.4-react-native-authentication.md" title="React Native Authentication"/>
        <story id="1.5" file="story-1.5-google-oauth.md" title="Google OAuth Integration"/>
        <story id="1.6" file="story-1.6-user-profile.md" title="User Profile Management"/>
        <story id="1.7" file="story-1.7-biometric-auth.md" title="Biometric Authentication"/>
        <story id="1.8" file="story-1.8-monitoring-rollback.md" title="Monitoring & Rollback"/>
      </correct-auth-stories>

      <phase-2-receipt-stories>
        <story id="2.1" file="1.1-enhanced-database-schema.md" title="Enhanced Database Schema"/>
        <story id="2.2" file="1.2-storage-configuration.md" title="Storage Configuration"/>
        <story id="2.3" title="Add Notes to Receipts" status="COMPLETED"/>
        <story id="2.4" file="1.3-default-categories-seeding.md" title="Category Management"/>
        <story id="2.5" file="2.5.story.md" title="Receipt Capture and Preview"/>
      </phase-2-receipt-stories>
    </story-mapping>
  </numbering-confusion-resolution>

  <!-- ============================================ -->
  <!--              PROJECT TIMELINE               -->
  <!-- ============================================ -->

  <project-timeline>
    <phase number="1" name="Foundation" status="COMPLETED">
      <period>September - December 2024</period>
      <description>Initial MVP development with core receipt capture functionality</description>
      <deliverables>
        - Basic Flutter app structure
        - Receipt capture and OCR processing
        - Local database with SQLite
        - CSV export functionality
      </deliverables>
    </phase>

    <phase number="2" name="Authentication & Multi-User" status="IN_PROGRESS">
      <period>January 2025</period>
      <current-story>Story 2.5 - Receipt Capture & Preview (COMPLETED)</current-story>
      <completed-stories>
        - Story 1.1-1.4: Authentication (Phase 2 stories, mislabeled files)
        - Story 2.1: Enhanced Database Schema
        - Story 2.2: Storage Service Integration
        - Story 2.3: Add Notes to Receipts
        - Story 2.4: Category Management
        - Story 2.5: Receipt Capture and Preview
      </completed-stories>
      <pull-requests>
        - PR #8: Web Authentication (MERGED)
        - PR #9: Database RLS & Migration (MERGED)
        - PR #11: Flutter Mobile Authentication (IN REVIEW)
        - PR #12: React Native Authentication (IN REVIEW)
      </pull-requests>
    </phase>

    <phase number="2B" name="Enhanced Auth Features" status="COMPLETED">
      <features>
        - Password reset flow
        - Email verification system
        - OAuth provider integration (Google ready)
        - Session lifecycle management
        - Cross-platform authentication
        - Biometric authentication support
        - Offline auth with 2-hour timeout
      </features>
    </phase>

    <phase number="2C" name="Infrastructure Testing" status="COMPLETED">
      <features>
        - Track 1: Test infrastructure interfaces (ISyncService, IAuthService)
        - Track 2: Supabase cloud infrastructure
        - 30 critical tests (15 auth + 15 capture)
        - Background service migration to flutter_background_service
        - Performance: 0.092ms RLS query time
      </features>
    </phase>
  </project-timeline>

  <!-- ============================================ -->
  <!--            CORRECTED EPIC STRUCTURE         -->
  <!-- ============================================ -->

  <epics>

    <!-- EPIC 1: CAPTURE & EXTRACT -->
    <epic number="1" title="Capture & Extract" status="COMPLETED">
      <file>docs/epics/epic-1-capture-extract.poml</file>
      <goal>Create seamless photo-to-data pipeline with automatic edge detection and OCR</goal>
      <stories>
        <story number="1" title="Batch Receipt Capture" status="completed">
          <acceptance-criteria>
            - Batch mode captures 10 receipts in less than 3 minutes
            - Long-press capture button activates batch mode
            - Auto-advance after each capture without preview
            - Running count overlay shows progress
          </acceptance-criteria>
        </story>

        <story number="2" title="Auto Edge Detection" status="completed">
          <acceptance-criteria>
            - 80%+ success rate on standard receipts
            - Auto-detect receipt edges during camera preview
            - Visual overlay shows detected boundaries
            - Manual adjustment handles available when auto-detection fails
          </acceptance-criteria>
        </story>

        <story number="3" title="OCR Confidence Scores Display" status="completed">
          <acceptance-criteria>
            - Color-coded scores visible for each field
            - Confidence percentages displayed (0-100%)
            - Low confidence fields highlighted (less than 75%)
            - High confidence fields marked as reliable (greater than 85%)
          </acceptance-criteria>
        </story>

        <story number="4" title="Retry Failed Captures" status="completed">
          <acceptance-criteria>
            - Retry option immediately available after failed capture
            - User can retake photo without losing current session
            - Multiple retry attempts supported without app restart
          </acceptance-criteria>
        </story>
      </stories>
      <technical-components>
        - CameraService with batch mode support
        - EdgeDetectionService using OpenCV
        - OCRService with Google ML Kit integration
        - ConfidenceScoreCalculator
        - RetrySessionManager
      </technical-components>
    </epic>

    <!-- EPIC 2: REVIEW & CORRECT -->
    <epic number="2" title="Review & Correct" file="docs/epics/epic-2-review-correct.poml">
      <goal>Enable users to quickly review and correct OCR-extracted data</goal>
      <status>PLANNED</status>
    </epic>

    <!-- EPIC 3: ORGANIZE & EXPORT -->
    <epic number="3" title="Organize & Export" file="docs/epics/epic-3-organize-export.poml">
      <goal>Help users organize receipts and export to accounting software</goal>
      <status>PARTIALLY_COMPLETED</status>
      <completed-features>
        - CSV export with multiple formats (QuickBooks, Xero, Generic)
        - Export validation and sanitization
        - Batch export support
      </completed-features>
    </epic>

    <!-- EPIC 4: SETTINGS & SUPPORT -->
    <epic number="4" title="Settings & Support" file="docs/epics/epic-4-settings-support.poml">
      <goal>Provide configuration options and help resources</goal>
      <status>PLANNED</status>
    </epic>

    <!-- EPIC 5: PRODUCTION INFRASTRUCTURE -->
    <epic number="5" title="Production Infrastructure" status="PLANNED">
      <file>docs/epics/epic-5-production-infrastructure.poml</file>
      <goal>Establish secure, scalable production infrastructure on Supabase cloud</goal>
      <sub-epics>
        <sub-epic number="5.1" title="Pre-Production Validation">
          <duration>30 minutes</duration>
          <stories>3</stories>
          <summary>Backup local data, review migrations, create deployment checklist</summary>
        </sub-epic>

        <sub-epic number="5.2" title="Supabase Project Setup">
          <duration>45 minutes</duration>
          <stories>4</stories>
          <summary>Create cloud project, configure auth, enable RLS, set project settings</summary>
        </sub-epic>

        <sub-epic number="5.3" title="Database Migration">
          <duration>45 minutes</duration>
          <stories>5</stories>
          <summary>Link project, dry run, apply migrations, verify schema, document</summary>
        </sub-epic>

        <sub-epic number="5.4" title="Security Configuration">
          <duration>30 minutes</duration>
          <stories>5</stories>
          <summary>Verify RLS, test access, validate policies, configure API, create runbook</summary>
        </sub-epic>
      </sub-epics>
      <total-duration>2.5 hours active work + buffer time</total-duration>
    </epic>
  </epics>

  <!-- ============================================ -->
  <!--      PHASE 2 AUTHENTICATION STORIES         -->
  <!-- ============================================ -->

  <phase-2-authentication>
    <overview>
      Phase 2 focused on adding multi-user support through authentication.
      These stories were completed but the story files have incorrect content.
    </overview>

    <story number="1.0" title="Auth Testing Infrastructure">
      <file>docs/stories/story-1.0-auth-testing-infrastructure.md</file>
      <status>COMPLETED</status>
    </story>

    <story number="1.1" title="Web Authentication Enhancement">
      <file>docs/stories/story-1.1-web-authentication.md</file>
      <status>COMPLETED</status>
      <description>Login/signup through Next.js app with Supabase auth</description>
    </story>

    <story number="1.2" title="Database RLS Configuration">
      <file>docs/stories/story-1.2-database-rls.md</file>
      <status>COMPLETED</status>
      <description>Row Level Security for multi-tenant data isolation</description>
    </story>

    <story number="1.3" title="Flutter Authentication">
      <file>docs/stories/story-1.3-flutter-authentication.md</file>
      <status>COMPLETED</status>
      <description>Mobile app authentication with Supabase</description>
    </story>

    <story number="1.4" title="React Native Authentication">
      <file>docs/stories/story-1.4-react-native-authentication.md</file>
      <status>PLANNED</status>
      <description>React Native app authentication (future)</description>
    </story>
  </phase-2-authentication>

  <!-- ============================================ -->
  <!--     PHASE 2 RECEIPT MANAGEMENT STORIES      -->
  <!-- ============================================ -->

  <phase-2-receipt-management>
    <story number="2.1" title="Enhanced Database Schema">
      <file>docs/stories/1.1-enhanced-database-schema.md</file>
      <status>COMPLETED</status>
      <completion-date>2025-01-13</completion-date>
    </story>

    <story number="2.2" title="Storage Configuration">
      <file>docs/stories/1.2-storage-configuration.md</file>
      <status>COMPLETED</status>
      <completion-date>2025-01-13</completion-date>
    </story>

    <story number="2.3" title="Add Notes to Receipts">
      <status>COMPLETED</status>
      <completion-date>2025-01-15</completion-date>
      <features>
        - Notes field in database schema
        - Note editing UI in receipt details
        - Notes persistence and sync
      </features>
    </story>

    <story number="2.4" title="Category Management">
      <file>docs/stories/1.3-default-categories-seeding.md</file>
      <status>COMPLETED</status>
      <features>
        - 52 default categories seeded in database
        - Category selection UI (pending mobile implementation)
      </features>
    </story>

    <story number="2.5" title="Receipt Capture and Preview">
      <file>docs/stories/2.5.story.md</file>
      <status>COMPLETED</status>
      <completion-date>2025-01-15</completion-date>
      <features>
        - Camera capture with preview
        - OCR processing pipeline
        - Confidence scoring display
        - Receipt storage and retrieval
      </features>
    </story>
  </phase-2-receipt-management>

  <!-- ============================================ -->
  <!--           TECHNICAL ARCHITECTURE            -->
  <!-- ============================================ -->

  <architecture>
    <overview>
      Multi-platform architecture with Flutter mobile, Next.js web, and shared Supabase backend
    </overview>

    <platforms>
      <platform name="Flutter Mobile" status="PRIMARY">
        <path>apps/mobile/</path>
        <version>3.35.3</version>
        <url>http://localhost:46131 (Chrome dev)</url>
        <state-management>Riverpod</state-management>
        <database>SQLite local + Supabase sync</database>
        <key-packages>
          - google_mlkit_text_recognition: OCR
          - camera: Image capture
          - csv: Export functionality
          - supabase_flutter: Backend sync
          - flutter_secure_storage: Credential storage
          - flutter_background_service: Background processing
        </key-packages>
        <vulcan-protocol>49% code reduction applied to Story 2.5</vulcan-protocol>
      </platform>

      <platform name="Next.js Web" status="SECONDARY">
        <path>apps/web/</path>
        <version>15.1.3</version>
        <url>http://localhost:3001</url>
        <ui-library>shadcn/ui</ui-library>
        <styling>Tailwind CSS</styling>
        <status>Behind Flutter in feature parity</status>
      </platform>

      <platform name="React Native" status="FUTURE">
        <path>apps/native/</path>
        <status>Planned but not implemented</status>
      </platform>

      <platform name="API Server" status="FUTURE">
        <path>apps/api/</path>
        <status>Planned but not implemented</status>
      </platform>
    </platforms>

    <backend>
      <service>Supabase</service>
      <project-id>xbadaalqaeszooyxuoac</project-id>
      <features>
        - PostgreSQL database with RLS
        - Authentication with email/password
        - Storage buckets for receipt images
        - Real-time subscriptions (planned)
      </features>
      <database-schema>
        <table name="receipts">
          - id: UUID primary key
          - user_id: UUID (auth.users reference)
          - vendor_name: text (was merchantName)
          - receipt_date: date
          - total_amount: decimal
          - tax_amount: decimal
          - category_id: UUID reference
          - notes: text
          - image_url: text
          - ocr_confidence: decimal
          - created_at: timestamp
        </table>
        <table name="categories">
          - id: UUID primary key
          - name: text
          - description: text
          - is_active: boolean
          - created_at: timestamp
        </table>
      </database-schema>
    </backend>

    <key-technical-decisions>
      <decision>
        <title>Offline-First Architecture</title>
        <rationale>Support receipt capture without internet connection</rationale>
        <implementation>SQLite local DB with Supabase sync when online</implementation>
      </decision>

      <decision>
        <title>Field Name Standardization</title>
        <issue>Inconsistent naming: vendorName vs merchantName</issue>
        <resolution>Standardized on vendorName in database schema</resolution>
      </decision>

      <decision>
        <title>Test Strategy Simplification</title>
        <rationale>Reduce maintenance burden of 200+ tests</rationale>
        <implementation>15 critical tests covering core functionality</implementation>
      </decision>
    </key-technical-decisions>
  </architecture>

  <!-- ============================================ -->
  <!--         CRITICAL ISSUES & RESOLUTIONS       -->
  <!-- ============================================ -->

  <critical-issues>
    <issue priority="HIGH">
      <title>Story File Content Mismatch</title>
      <description>
        Files 1.1.story.md through 1.4.story.md contain receipt capture stories
        but should contain authentication stories according to PROJECT_STATUS.md
      </description>
      <impact>Major confusion in project documentation</impact>
      <resolution>
        - This document clarifies correct story mapping
        - Actual auth stories in story-1.x-*.md files
        - Receipt stories belong to Epic 1
      </resolution>
    </issue>

    <issue priority="MEDIUM">
      <title>Platform Feature Parity</title>
      <description>Flutter app ahead of web/native in features</description>
      <impact>Inconsistent user experience across platforms</impact>
      <resolution>Need synchronized development approach</resolution>
    </issue>

    <issue priority="MEDIUM">
      <title>Category Implementation Gap</title>
      <description>52 categories in database but not exposed in mobile UI</description>
      <impact>Category feature incomplete</impact>
      <resolution>Pending mobile UI implementation</resolution>
    </issue>
  </critical-issues>

  <!-- ============================================ -->
  <!--              TESTING STRATEGY               -->
  <!-- ============================================ -->

  <testing-strategy>
    <approach>Simplified from 200+ tests to 15 critical tests</approach>
    <critical-tests>
      <test-suite name="Core Tests" path="test/core_tests/">
        <test>app_launch_test.dart - App starts without crashing</test>
        <test>csv_export_test.dart - Export functionality works</test>
        <test>receipt_repository_test.dart - Data persistence</test>
      </test-suite>

      <test-suite name="Integration Tests" path="test/integration_tests/">
        <test>critical_user_flows_test.dart - End-to-end workflows</test>
        <test>export_validation_flow_test.dart - Export integrity</test>
      </test-suite>

      <test-suite name="Unit Tests" focus="Business Logic">
        <test>OCR processing accuracy</test>
        <test>Confidence score calculation</test>
        <test>CSV format validation</test>
      </test-suite>
    </critical-tests>

    <run-command>
      flutter test test/core_tests/ test/integration_tests/ --reporter compact
    </run-command>
  </testing-strategy>

  <!-- ============================================ -->
  <!--           PROJECT FILE STRUCTURE            -->
  <!-- ============================================ -->

  <project-structure>
    <root-files>
      - CLAUDE.md / CLAUDE.poml - AI assistant instructions
      - PROJECT_STATUS.md - Current implementation status
      - SIMPLIFIED_TEST_STRATEGY.md - Testing approach
      - OUR_PROJECT_DEVELOPMENT_WORKFLOW.poml - Previous consolidation attempt
      - CONSOLIDATED_BROWNFIELD_WORKFLOW.poml - BMad framework docs
    </root-files>

    <documentation>
      <folder path="docs/">
        <subfolder path="epics/">
          - epic-1-capture-extract.poml
          - epic-2-review-correct.poml
          - epic-3-organize-export.poml
          - epic-4-settings-support.poml
          - epic-5-production-infrastructure.poml
          - epic-5.1 through 5.4 sub-epics
        </subfolder>

        <subfolder path="stories/">
          - MISNAMED: 1.1-1.4.story.md (contain wrong content)
          - CORRECT: story-1.0 through 1.4-*.md (authentication)
          - 1.1-enhanced-database-schema.md (Story 2.1)
          - 1.2-storage-configuration.md (Story 2.2)
          - 1.3-default-categories-seeding.md (Story 2.4)
          - 2.5.story.md (Receipt Capture)
        </subfolder>

        <subfolder path="architecture/">
          - architecture.md (23KB)
          - brownfield-architecture.md (15KB)
          - front-end-spec.md (53KB)
          - front-end-spec.poml (84KB)
        </subfolder>

        <subfolder path="sharded-prd/">
          - 11 files breaking down PRD into components
          - epics.poml - Alternative epic structure
        </subfolder>

        <subfolder path="qa/">
          - Test plans and risk assessments
          - NFR (Non-Functional Requirements) docs
        </subfolder>
      </folder>
    </documentation>

    <applications>
      <app path="apps/mobile/">
        Flutter mobile application (PRIMARY)
        - lib/ - Application source code
        - test/ - Test files
        - pubspec.yaml - Dependencies
      </app>

      <app path="apps/web/">
        Next.js web application (SECONDARY)
        - Behind Flutter in features
      </app>

      <app path="apps/native/">
        React Native (PLANNED)
      </app>

      <app path="apps/api/">
        API Server (PLANNED)
      </app>
    </applications>
  </project-structure>

  <!-- ============================================ -->
  <!--              NEXT STEPS                     -->
  <!-- ============================================ -->

  <next-steps>
    <immediate priority="HIGH">
      1. Fix story file naming confusion (rename or update content)
      2. Implement category selection UI in mobile app
      3. Bring web app to feature parity with mobile
    </immediate>

    <short-term priority="MEDIUM">
      1. Complete Epic 5 - Production Infrastructure deployment
      2. Implement Epic 2 - Review & Correct functionality
      3. Add real-time sync between platforms
    </short-term>

    <long-term priority="LOW">
      1. Implement React Native app
      2. Build dedicated API server
      3. Add premium features (bulk operations, advanced analytics)
    </long-term>
  </next-steps>

  <!-- ============================================ -->
  <!--            METADATA FOOTER                  -->
  <!-- ============================================ -->

  <!-- ============================================ -->
  <!--     SOURCE FILES USED FOR CONSOLIDATION     -->
  <!-- ============================================ -->

  <source-files-cleanup>
    <purpose>
      These files were analyzed to create this consolidated document.
      They can now be referenced from this single source of truth.
    </purpose>

    <primary-sources>
      <file path="PROJECT_STATUS.md" status="CRITICAL">
        Current implementation status - Shows what was ACTUALLY built
        Key info: Phase 2 complete, Story 2.5 done, PR status
      </file>

      <file path="docs/stories/1.1-1.4.story.md" status="INCORRECT">
        WRONG CONTENT - Contains receipt capture stories
        Should contain authentication stories
      </file>

      <file path="docs/stories/story-1.1-web-authentication.md" status="CORRECT">
        Actual authentication story for web platform
      </file>

      <file path="docs/epics/epic-1-capture-extract.poml" status="ANALYZED">
        Epic 1 definition with 4 capture stories
      </file>

      <file path="docs/epics/epic-5-production-infrastructure.poml" status="ANALYZED">
        Production deployment epic with 4 sub-epics
      </file>
    </primary-sources>

    <secondary-sources>
      - OUR_PROJECT_DEVELOPMENT_WORKFLOW.poml (Previous attempt)
      - CONSOLIDATED_BROWNFIELD_WORKFLOW.poml (BMad framework)
      - SIMPLIFIED_TEST_STRATEGY.md (15 critical tests)
      - docs/architecture/architecture.md (23KB)
      - docs/architecture/brownfield-architecture.md (15KB)
      - docs/prd.md and front-end-spec.md/poml
      - docs/sharded-prd/* (11 files)
      - docs/qa/* (Risk assessments and test plans)
      - WEB_AUTH_COMPLETION_REPORT.md
      - PHASE_2B_COMPLETION_REPORT.md
      - PHASE_2C_COMPLETION_REPORT.md
    </secondary-sources>

    <files-discovered>
      <initial-search>138 files</initial-search>
      <expanded-search>200+ files</expanded-search>
      <epics-found>17 epic files</epics-found>
      <stories-found>20+ story files</stories-found>
      <architecture-docs>Multiple formats (MD and POML)</architecture-docs>
    </files-discovered>
  </source-files-cleanup>

  <!-- ============================================ -->
  <!--           DEVELOPMENT COMMANDS              -->
  <!-- ============================================ -->

  <commands>
    <mobile-development>
      # Run critical tests
      cd apps/mobile
      flutter test test/core_tests/ test/integration_tests/ --reporter compact

      # Run with production database
      flutter run -d chrome --dart-define=PRODUCTION=true

      # Analyze code
      flutter analyze --no-pub

      # Build Android APK
      flutter build apk --debug
    </mobile-development>

    <web-development>
      # Start web app
      cd apps/web
      npm run dev

      # Build for production
      npm run build

      # Deploy to Vercel
      vercel
    </web-development>

    <database-management>
      # Apply migrations
      npx supabase db push

      # Check migration status
      npx supabase db migrations list

      # Test RLS policies
      npx supabase test
    </database-management>
  </commands>

  <metadata-footer>
    <stats>
      <total-epics>5</total-epics>
      <total-stories>20+</total-stories>
      <completed-stories>14</completed-stories>
      <total-project-files>200+</total-project-files>
      <documentation-files>100+</documentation-files>
      <pull-requests>4 (2 merged, 2 in review)</pull-requests>
      <test-count>30 critical tests</test-count>
    </stats>

    <consolidation-note>
      This document represents the TRUTH after extensive analysis revealing:
      - Major story numbering confusion (files mislabeled)
      - Authentication stories completed but filed incorrectly
      - Multiple documentation formats (MD and POML versions)
      - Platform divergence with Flutter leading development
      - 52 categories in DB but not in mobile UI
      - Vulcan Protocol applied (49% code reduction)

      Created using ULTRA THINK mode with atomic task breakdown.
      All critical context from PROJECT_STATUS.md and epic files retained.
    </consolidation-note>

    <last-updated>2025-01-16</last-updated>
    <format>POML</format>
  </metadata-footer>
</poml>