# Flutter CI/CD workflow for Receipt Organizer

name: Flutter CI

on:
  push:
    branches: [ "main", "master", "develop", "feature/**" ]
  pull_request:
    branches: [ "main", "master", "develop" ]

env:
  FLUTTER_VERSION: '3.24.0'
  JAVA_VERSION: '17'

jobs:
  # Code quality and tests
  test:
    name: Test and Analyze
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          apps/mobile/.dart_tool
          apps/mobile/build
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Get dependencies
      working-directory: apps/mobile
      run: flutter pub get

    - name: Generate code
      working-directory: apps/mobile
      run: |
        flutter pub run build_runner build --delete-conflicting-outputs || true

    - name: Analyze code
      working-directory: apps/mobile
      run: |
        flutter analyze --no-fatal-infos --no-fatal-warnings

    - name: Format check
      working-directory: apps/mobile
      run: dart format --set-exit-if-changed lib test

    - name: Run tests
      working-directory: apps/mobile
      run: |
        flutter test --coverage --test-randomize-ordering-seed random

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: apps/mobile/coverage/lcov.info
        flags: flutter
        name: flutter-coverage

  # Build Android APK
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          apps/mobile/.dart_tool
          apps/mobile/build
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Get dependencies
      working-directory: apps/mobile
      run: flutter pub get

    - name: Build APK
      working-directory: apps/mobile
      run: flutter build apk --debug --no-shrink

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: apps/mobile/build/app/outputs/flutter-apk/app-debug.apk

  # Build iOS (macOS runner required)
  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test
    # Only run on main branch due to macOS runner costs
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          apps/mobile/.dart_tool
          apps/mobile/build
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Get dependencies
      working-directory: apps/mobile
      run: flutter pub get

    - name: Build iOS
      working-directory: apps/mobile
      run: flutter build ios --debug --no-codesign --simulator

    - name: Upload iOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: apps/mobile/build/ios/iphonesimulator/Runner.app

  # Integration tests
  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Get dependencies
      working-directory: apps/mobile
      run: flutter pub get

    - name: Run integration tests
      working-directory: apps/mobile
      run: |
        flutter test test/integration/
        flutter test test/integration_tests/
      continue-on-error: true  # Don't fail if integration tests fail

    - name: Run performance tests
      working-directory: apps/mobile
      run: |
        flutter test test/performance/
      continue-on-error: true  # Don't fail if performance tests fail