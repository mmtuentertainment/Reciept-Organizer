name: Supabase CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'infrastructure/supabase/**'
      - '.github/workflows/supabase.yml'
  pull_request:
    branches: [main]
    paths:
      - 'infrastructure/supabase/**'

jobs:
  test-migrations:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
      
      - name: Start Supabase local
        run: |
          cd infrastructure/supabase
          supabase start
      
      - name: Verify migrations
        run: |
          cd infrastructure/supabase
          supabase db push --dry-run
      
      - name: Run migrations
        run: |
          cd infrastructure/supabase
          supabase db push
      
      - name: Run seed data
        run: |
          cd infrastructure/supabase
          supabase db seed
      
      - name: Stop Supabase
        if: always()
        run: |
          cd infrastructure/supabase
          supabase stop

  deploy-staging:
    needs: test-migrations
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
      
      - name: Deploy to Staging
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_STAGING_PROJECT_ID }}
        run: |
          cd infrastructure/supabase
          supabase link --project-ref $SUPABASE_PROJECT_ID
          supabase db push

  deploy-production:
    needs: test-migrations
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
      
      - name: Deploy to Production
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PRODUCTION_PROJECT_ID }}
        run: |
          cd infrastructure/supabase
          supabase link --project-ref $SUPABASE_PROJECT_ID
          supabase db push --include-all