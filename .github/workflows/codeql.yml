# CodeQL code scanning workflow for Receipt Organizer Flutter app
# Analyzes the languages actually used in the project

name: "CodeQL"

on:
  push:
    branches: [ "main", "master", "develop", "feature/**" ]
  pull_request:
    branches: [ "main", "master", "develop" ]
  schedule:
    # Run at 3 AM UTC every Sunday
    - cron: '0 3 * * 0'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      # required for all workflows
      security-events: write
      # required to fetch internal or private CodeQL packs
      packages: read
      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript-typescript', 'java-kotlin', 'python' ]
        # CodeQL supports the following languages:
        # 'cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
        # For Flutter apps, we analyze:
        # - javascript-typescript: for any web components
        # - java-kotlin: for Android-specific code
        # - python: for any build scripts
        # Note: Dart is not directly supported by CodeQL yet

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file
        # queries: security-extended,security-and-quality

        # Override the default behavior so that the action doesn't attempt
        # to auto-install Python versions
        setup-python-dependencies: false

    # For Java/Kotlin analysis of Android code
    - name: Set up JDK
      if: matrix.language == 'java-kotlin'
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Set up Flutter for proper project structure
    - name: Setup Flutter
      if: matrix.language == 'java-kotlin'
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    # Get Flutter dependencies
    - name: Get dependencies
      if: matrix.language == 'java-kotlin'
      working-directory: apps/mobile
      run: |
        flutter pub get
        flutter pub run build_runner build --delete-conflicting-outputs || true

    # Autobuild attempts to build any compiled languages
    # For Flutter/Dart projects, this helps with Android/iOS native code
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    # If the Autobuild fails, you can remove it and uncomment the following
    # to manually build your project:
    # - name: Build Android
    #   if: matrix.language == 'java-kotlin'
    #   working-directory: apps/mobile
    #   run: |
    #     flutter build apk --debug --no-shrink

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"