name: Deploy to Production

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  FLUTTER_VERSION: '3.35.0'

jobs:
  validate-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - uses: actions/checkout@v3

      - name: Extract version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION="manual-$(date +%Y%m%d-%H%M%S)"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Deploying version: $VERSION"

      - name: Validate version format
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            if ! [[ ${{ steps.version.outputs.version }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "❌ Invalid version format. Expected: v1.2.3"
              exit 1
            fi
          fi

  run-tests:
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  deploy-web:
    needs: [validate-release, run-tests]
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment || 'production' }}
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        working-directory: apps/mobile
        run: flutter pub get

      - name: Build web optimized
        working-directory: apps/mobile
        run: |
          flutter build web --release \
            --web-renderer canvaskit \
            --tree-shake-icons \
            --pwa-strategy none

      - name: Optimize web assets
        working-directory: apps/mobile/build/web
        run: |
          # Compress JavaScript files
          find . -name "*.js" -exec gzip -9 -k {} \;

          # Compress CSS files
          find . -name "*.css" -exec gzip -9 -k {} \;

          # Generate service worker for offline support
          cat > sw.js << 'EOF'
          const CACHE_NAME = 'receipt-organizer-${{ needs.validate-release.outputs.version }}';
          const urlsToCache = [
            '/',
            '/index.html',
            '/main.dart.js',
            '/flutter.js'
          ];

          self.addEventListener('install', event => {
            event.waitUntil(
              caches.open(CACHE_NAME)
                .then(cache => cache.addAll(urlsToCache))
            );
          });

          self.addEventListener('fetch', event => {
            event.respondWith(
              caches.match(event.request)
                .then(response => response || fetch(event.request))
            );
          });
          EOF

      - name: Deploy to Firebase Hosting
        id: deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: receipt-organizer-mvp
          channelId: ${{ github.event.inputs.environment == 'staging' && 'staging' || 'live' }}

      - name: Update production URL
        if: github.event.inputs.environment != 'staging'
        run: |
          echo "Production URL: ${{ steps.deploy.outputs.url }}"
          echo "url=${{ steps.deploy.outputs.url }}" >> $GITHUB_OUTPUT

  deploy-android:
    needs: [validate-release, run-tests]
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    environment:
      name: play-store
      url: https://play.google.com/store/apps/details?id=com.example.receiptorganizer

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        working-directory: apps/mobile
        run: flutter pub get

      - name: Setup signing
        working-directory: apps/mobile
        env:
          KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          KEY_PROPERTIES: ${{ secrets.ANDROID_KEY_PROPERTIES }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > android/app/keystore.jks
          echo "$KEY_PROPERTIES" > android/key.properties

      - name: Update version
        working-directory: apps/mobile
        run: |
          VERSION=${{ needs.validate-release.outputs.version }}
          VERSION_CODE=$(date +%Y%m%d%H)

          # Update pubspec.yaml version
          sed -i "s/version: .*/version: ${VERSION#v}+$VERSION_CODE/" pubspec.yaml

      - name: Build AAB
        working-directory: apps/mobile
        run: flutter build appbundle --release

      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.example.receiptorganizer
          releaseFiles: apps/mobile/build/app/outputs/bundle/release/app-release.aab
          track: ${{ github.event.inputs.environment == 'staging' && 'internal' || 'production' }}
          status: completed
          releaseName: ${{ needs.validate-release.outputs.version }}
          whatsNewDirectory: apps/mobile/release-notes/

  deploy-ios:
    needs: [validate-release, run-tests]
    runs-on: macos-latest
    if: github.ref_type == 'tag'
    environment:
      name: app-store
      url: https://apps.apple.com/app/receipt-organizer/id123456789

    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        working-directory: apps/mobile
        run: flutter pub get

      - name: Setup certificates
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.IOS_BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.IOS_P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
        run: |
          # Create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # Import certificate and provisioning profile
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # Import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Update version
        working-directory: apps/mobile
        run: |
          VERSION=${{ needs.validate-release.outputs.version }}
          BUILD_NUMBER=$(date +%Y%m%d%H)

          # Update Info.plist
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString ${VERSION#v}" ios/Runner/Info.plist
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $BUILD_NUMBER" ios/Runner/Info.plist

      - name: Build IPA
        working-directory: apps/mobile
        run: |
          flutter build ipa --release \
            --export-options-plist=ios/ExportOptions.plist

      - name: Upload to TestFlight
        env:
          APPLEID_USERNAME: ${{ secrets.APPLEID_USERNAME }}
          APPLEID_PASSWORD: ${{ secrets.APPLEID_PASSWORD }}
        run: |
          xcrun altool --upload-app \
            --type ios \
            --file "apps/mobile/build/ios/ipa/*.ipa" \
            --username "$APPLEID_USERNAME" \
            --password "$APPLEID_PASSWORD"

  create-release:
    needs: [validate-release, deploy-web, deploy-android, deploy-ios]
    runs-on: ubuntu-latest
    if: always() && github.ref_type == 'tag'

    steps:
      - uses: actions/checkout@v3

      - name: Generate release notes
        id: notes
        run: |
          cat > release-notes.md << EOF
          # Release ${{ needs.validate-release.outputs.version }}

          ## 🚀 What's New
          - Enhanced receipt capture with improved OCR accuracy
          - Added dark mode support
          - Performance improvements and bug fixes

          ## 📱 Platform Releases
          - **Web**: ${{ needs.deploy-web.outputs.url || 'Deployment pending' }}
          - **Android**: [Google Play Store](https://play.google.com/store/apps/details?id=com.example.receiptorganizer)
          - **iOS**: [App Store](https://apps.apple.com/app/receipt-organizer/id123456789)

          ## 📊 Build Status
          - Tests: ✅ Passed
          - Security Scan: ✅ Passed
          - Code Coverage: >80%

          ## 🔄 Changes
          $(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD)

          ---
          *Built with GitHub Actions*
          EOF

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: release-artifacts/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ needs.validate-release.outputs.version }}
          body_path: release-notes.md
          draft: false
          prerelease: false
          files: |
            release-artifacts/android-apk/*.apk
            release-artifacts/android-aab/*.aab

  rollback:
    needs: [deploy-web, deploy-android, deploy-ios]
    runs-on: ubuntu-latest
    if: failure()
    environment: production

    steps:
      - name: Trigger rollback
        run: |
          echo "⚠️ Deployment failed! Initiating rollback..."
          echo "Previous stable version should be restored"

      - name: Rollback Firebase Hosting
        if: needs.deploy-web.result == 'failure'
        run: |
          # Firebase automatically maintains previous versions
          echo "Firebase Hosting maintains previous versions automatically"
          echo "Manual rollback can be done from Firebase Console"

      - name: Notify team
        run: |
          echo "🚨 Deployment failed and rollback initiated"
          echo "Please check the deployment logs and fix issues"

  cleanup:
    needs: [create-release]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Clean up artifacts
        run: |
          echo "Cleaning up build artifacts older than 7 days"
          # GitHub automatically cleans up artifacts after 90 days
          # This is a placeholder for any custom cleanup

      - name: Update deployment metrics
        run: |
          echo "## Deployment Metrics" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Version | ${{ needs.validate-release.outputs.version }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Environment | ${{ github.event.inputs.environment || 'production' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Triggered by | ${{ github.actor }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Date | $(date) |" >> $GITHUB_STEP_SUMMARY